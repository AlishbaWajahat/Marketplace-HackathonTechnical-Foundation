  //payment
  export const paymentSchema = {
    name: 'payment', title: 'Payment', type: 'document', fields: [
      { name: 'order', title: 'Order', type: 'reference', to: [{ type: 'order' }], description: 'Reference to the related order', validation: Rule => Rule.required() },
      { name: 'user', title: 'User', type: 'reference', to: [{ type: 'user' }], description: 'Reference to the user who made the payment', validation: Rule => Rule.required() },
      { name: 'paymentIntentId', title: 'Payment Intent ID', type: 'string', description: 'ID generated by Stripe for the payment process', validation: Rule => Rule.required() },
      { name: 'status', title: 'Payment Status', type: 'string', options: { list: [{ title: 'Pending', value: 'pending' }, { title: 'Succeeded', value: 'succeeded' }, { title: 'Failed', value: 'failed' }, { title: 'Canceled', value: 'canceled' }] }, description: 'Current status of the payment', validation: Rule => Rule.required() },
      { name: 'amount', title: 'Amount', type: 'number', description: 'The total amount paid by the user', validation: Rule => Rule.required().min(1) },
      { name: 'currency', title: 'Currency', type: 'string', description: 'Currency in which the payment was made', validation: Rule => Rule.required().min(3).max(3) },
      { name: 'paymentMethod', title: 'Payment Method', type: 'string', options: { list: [{ title: 'Credit Card', value: 'credit_card' }, { title: 'PayPal', value: 'paypal' }, { title: 'Stripe', value: 'stripe' }] }, description: 'Method used for the payment', validation: Rule => Rule.required() },
      { name: 'paymentDate', title: 'Payment Date', type: 'datetime', description: 'Timestamp when the payment was made', validation: Rule => Rule.required() },
      { name: 'transactionId', title: 'Transaction ID', type: 'string', description: 'The transaction ID returned from the payment gateway', validation: Rule => Rule.optional() },
      { name: 'paymentDetails', title: 'Payment Details', type: 'text', description: 'Additional details or notes about the payment (optional)', validation: Rule => Rule.optional() }
    ],
    preview: {
      select: { title: 'paymentIntentId', subtitle: 'status', media: 'user.profilePicture' },
      prepare(selection) {
        const { title, subtitle, media } = selection
        return { title, subtitle, media: media || 'https://via.placeholder.com/150' }
      }
    }
  }